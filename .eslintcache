[{"/Users/vadykk/Desktop/edu/swapi/src/index.js":"1","/Users/vadykk/Desktop/edu/swapi/src/reportWebVitals.js":"2","/Users/vadykk/Desktop/edu/swapi/src/App.js":"3","/Users/vadykk/Desktop/edu/swapi/src/api.js":"4","/Users/vadykk/Desktop/edu/swapi/src/components/PersonCard.js":"5","/Users/vadykk/Desktop/edu/swapi/src/firebase.js":"6","/Users/vadykk/Desktop/edu/swapi/src/components/Search.js":"7","/Users/vadykk/Desktop/edu/swapi/src/components/Nav.js":"8","/Users/vadykk/Desktop/edu/swapi/src/components/GlobalStyles.js":"9","/Users/vadykk/Desktop/edu/swapi/src/components/MyHeroes.js":"10"},{"size":500,"mtime":1611778251594,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1611778251596,"results":"13","hashOfConfig":"12"},{"size":2095,"mtime":1612190608427,"results":"14","hashOfConfig":"12"},{"size":117,"mtime":1611842872603,"results":"15","hashOfConfig":"12"},{"size":7334,"mtime":1612191558439,"results":"16","hashOfConfig":"12"},{"size":546,"mtime":1612030798696,"results":"17","hashOfConfig":"12"},{"size":4487,"mtime":1612207177650,"results":"18","hashOfConfig":"12"},{"size":2033,"mtime":1612190251135,"results":"19","hashOfConfig":"12"},{"size":352,"mtime":1612125388219,"results":"20","hashOfConfig":"12"},{"size":1335,"mtime":1612191180356,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1q2usm",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/vadykk/Desktop/edu/swapi/src/index.js",[],["46","47"],"/Users/vadykk/Desktop/edu/swapi/src/reportWebVitals.js",[],"/Users/vadykk/Desktop/edu/swapi/src/App.js",["48"],"import React, { useState, useEffect } from \"react\";\n\nimport GlobalStyles from \"./components/GlobalStyles\";\nimport Nav from \"./components/Nav\";\nimport Search from \"./components/Search\";\n\nimport \"./App.css\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { auth } from \"./firebase\";\nimport firebase from \"firebase\";\n\nfunction App() {\n  const [allPeople, setAllPeople] = useState(\"\");\n\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [user, setUser] = useState(\"\");\n\n  useEffect(() => {\n    let people = [];\n    axios\n      .get(\"https://swapi.dev/api/people/\")\n      .then((response) => {\n        people = response.data.results;\n        return response.data.count;\n      })\n      .then((count) => {\n        const numberOfPagesLeft = Math.ceil((count - 1) / 10);\n        let promises = [];\n\n        for (let i = 2; i <= numberOfPagesLeft; i++) {\n          promises.push(axios(`https://swapi.dev/api/people?page=${i}`));\n        }\n        return Promise.all(promises);\n      })\n      .then((response) => {\n        people = response.reduce(\n          (acc, data) => [...acc, ...data.data.results],\n          people\n        );\n        return setAllPeople(people);\n      });\n  }, []);\n\n  //auth\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        setUser(authUser);\n        setLoggedIn(true);\n      } else {\n        setUser(\"\");\n        setLoggedIn(false);\n      }\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, [user]);\n\n  return (\n    <>\n      <GlobalStyles />\n      <div className=\"App\">\n        <Container>\n          <Wrapper>\n            <Nav loggedIn={loggedIn} user={user} />\n            <Search allPeople={allPeople} loggedIn={loggedIn} user={user} />\n          </Wrapper>\n        </Container>\n      </div>\n    </>\n  );\n}\n\nconst Container = styled.div`\n  width: 100%;\n  background-color: black;\n`;\n\nconst Wrapper = styled.div`\n  max-width: 1200px;\n  margin: auto;\n  padding: 16px 32px;\n  background-image: url(\"/images/background.jpg\");\n  min-height: 100vh;\n`;\nexport default App;\n","/Users/vadykk/Desktop/edu/swapi/src/api.js",[],"/Users/vadykk/Desktop/edu/swapi/src/components/PersonCard.js",["49"],"import React, { useState, useEffect } from \"react\";\n\nimport uuid from \"react-uuid\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { db, storage } from \"../firebase\";\nimport firebase from \"firebase\";\n\nconst PersonCard = ({ person, suggestions, handleClear, loggedIn, user }) => {\n  const [homeworld, setHomeworld] = useState(\"\");\n  const [films, setFilms] = useState([]);\n  const [vehicles, setVehicles] = useState([]);\n  const [liked, setLiked] = useState(false);\n  const [image, setImage] = useState(\"\");\n  const [uploadedImageURL, setUploadedImageURL] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setImage(\"\");\n    setUploadedImageURL(\"\");\n\n    if (person && user) {\n      setLiked(false);\n      db.collection(\"swapi\")\n        .where(\"user\", \"==\", user?.displayName)\n        .onSnapshot((snap) => {\n          snap.docs.map((entry) => {\n            if (person.name === entry.data().liked) {\n              setLiked(true);\n              setUploadedImageURL(entry.data().image);\n            }\n          });\n        });\n    }\n  }, [person, user]);\n\n  //Getting async Vehicles/Films/Homeworld requests\n  useEffect(() => {\n    setIsLoading(true);\n    setVehicles([]);\n    setHomeworld(\"\");\n    setFilms([]);\n\n    if (person) {\n      const handleAllRequests = () => {\n        Promise.all([\n          Promise.all(\n            person.vehicles.map((vehicle) => {\n              return axios.get(vehicle).then((resp) => {\n                return { name: resp.data.name, model: resp.data.model };\n              });\n            })\n          ).then((resp) => {\n            setVehicles(resp);\n          }),\n          Promise.all(\n            person.films.map((film) => {\n              return axios.get(film).then((e) => {\n                return e.data.title;\n              });\n            })\n          ).then((resp) => setFilms(resp)),\n          axios\n            .get(person.homeworld)\n            .then((planet) => {\n              return setHomeworld(planet.data.name);\n            })\n            .catch((error) => console.log(error)),\n        ]).then((result) => setIsLoading(false));\n      };\n      handleAllRequests();\n    }\n  }, [person]);\n\n  const handleImage = (e) => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  };\n\n  const handleUpload = () => {\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\n    uploadTask.on(\n      \"state_changed\",\n      storage\n        .ref(\"images\")\n        .child(image.name)\n        .getDownloadURL()\n        .then((url) => {\n          db.collection(\"swapi\")\n            .where(\"user\", \"==\", user?.displayName)\n            .where(\"liked\", \"==\", person.name)\n            .get()\n            .then((data) => {\n              return data.docs[0].id;\n            })\n            .then((id) => {\n              return db.collection(\"swapi\").doc(id).update({\n                image: url,\n              });\n            });\n        })\n    );\n  };\n\n  const likeHandler = () => {\n    db.collection(\"swapi\")\n      .where(\"user\", \"==\", user?.displayName)\n      .get()\n      .then((snapshot) => {\n        if (\n          !snapshot.docs.map((doc) => doc.data().liked).includes(person?.name)\n        ) {\n          db.collection(\"swapi\").add({\n            user: user.displayName,\n            liked: person?.name,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n          });\n        }\n      });\n  };\n\n  return (\n    !isLoading && (\n      <>\n        <StyledCard>\n          {person && !suggestions && (\n            <div>\n              <div>\n                {!uploadedImageURL && liked && (\n                  <ChooseImage>\n                    <label htmlFor=\"choose-img\">choose photo</label>\n                    <input id=\"choose-img\" type=\"file\" onChange={handleImage} />\n                    {image && (\n                      <button onClick={handleUpload}>upload</button>\n                    )}{\" \"}\n                  </ChooseImage>\n                )}\n                {/* <button onClick={handleUpload}>upload</button> */}\n              </div>\n              {uploadedImageURL && loggedIn && (\n                <UploadedImage>\n                  <img src={uploadedImageURL} alt=\"img\" />\n                </UploadedImage>\n              )}\n              <p>\n                <span className=\"title\">Name:</span>\n                {person.name}\n              </p>\n              <p>\n                <span className=\"title\">Height: </span>\n                {person.height}\n              </p>\n              <p>\n                <span className=\"title\">Mass: </span>\n                {person.mass}\n              </p>\n              <p>\n                <span className=\"title\">Hair Color:</span> {person.hair_color}\n              </p>\n              <p>\n                <span className=\"title\">Skin Color: </span>\n                {person.skin_color}\n              </p>\n              <p>\n                <span className=\"title\">Eye Color:</span> {person.eye_color}\n              </p>\n              <p>\n                <span className=\"title\">Birth Year:</span> {person.birth_year}\n              </p>\n              <p>\n                <span className=\"title\">Gender:</span> {person.gender}\n              </p>\n              <ul>\n                <span className=\"title\">Vehicles:</span>\n                {vehicles.map((i) => (\n                  <li key={uuid()}>\n                    <span className=\"subtitle\"> </span>\n                    {i?.name} (<span className=\"subtitle\">model:</span>\n                    {i?.model})\n                  </li>\n                ))}\n              </ul>\n              <ul>\n                <span className=\"title\">Films:</span>\n                {films.map((i) => (\n                  <li key={uuid()}>{i}</li>\n                ))}\n              </ul>\n              <p>\n                <span className=\"title\">Homewold: </span>\n                {homeworld}\n              </p>\n            </div>\n          )}\n        </StyledCard>\n        <StyledButtons>\n          {loggedIn && !liked && <Button onClick={likeHandler}>like</Button>}\n          <Button onClick={handleClear}>close</Button>\n        </StyledButtons>\n      </>\n    )\n  );\n};\n\nconst StyledCard = styled.div`\n  margin: 3% auto 0 auto;\n  padding: 0.8rem;\n  max-width: 25rem;\n  width: auto;\n  background-color: #2b2b2b;\n  line-height: 1.5rem;\n  border-radius: 1rem;\n  text-align: left;\n\n  .title {\n    color: #635c5c;\n    text-transform: uppercase;\n  }\n\n  .subtitle {\n  }\n`;\nconst StyledButtons = styled.div`\n  display: flex;\n  max-width: 25rem;\n  margin: auto;\n  margin: 3% auto 0 auto;\n  justify-content: space-evenly;\n`;\n\nconst Button = styled.div`\n  cursor: pointer;\n  padding: 1rem;\n  border: 5px solid gray;\n  &:hover {\n    color: red;\n  }\n`;\n\nconst ChooseImage = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  line-height: 0.1rem;\n  flex-direction: column;\n  color: #6262d8;\n  width: 13rem;\n  padding: 1rem 0;\n  min-height: 1rem;\n  margin: 0 auto;\n  text-align: center;\n\n  label {\n    cursor: pointer;\n  }\n  input {\n    visibility: hidden;\n  }\n\n  button {\n    padding: 0.3rem;\n    width: 50%;\n  }\n`;\n\nconst UploadedImage = styled.div`\n  border-radius: 1rem;\n  max-height: 15rem;\n  margin-bottom: 0.8rem;\n\n  overflow: hidden;\n  img {\n    width: 100%;\n  }\n`;\n\nexport default PersonCard;\n","/Users/vadykk/Desktop/edu/swapi/src/firebase.js",[],"/Users/vadykk/Desktop/edu/swapi/src/components/Search.js",["50"],"/Users/vadykk/Desktop/edu/swapi/src/components/Nav.js",["51","52","53","54","55"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport firebase from \"firebase\";\n\nconst Nav = ({ loggedIn, user }) => {\n  const [open, setOpen] = useState(false);\n\n  const uiConfig = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: \"popup\",\n    // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n    signInSuccessUrl: \"/signedIn\",\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [firebase.auth.FacebookAuthProvider.PROVIDER_ID],\n  };\n\n  const handleLogin = () => {\n    // Sign in using a popup.\n    var provider = new firebase.auth.FacebookAuthProvider();\n    provider.addScope(\"user_birthday\");\n    // provider.setCustomParameters({ auth_type: \"reauthenticate\" });\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then(function (result) {\n        // This gives you a Facebook Access Token.\n        var token = result.credential.accessToken;\n        // The signed-in user info.\n        var user = result.user;\n      });\n  };\n\n  const handleLogout = () => {\n    firebase\n      .auth()\n      .signOut()\n      .catch((error) => console.log(error));\n  };\n\n  return (\n    <NavBar>\n      {loggedIn ? (\n        <>\n          <Login onClick={handleLogout}>Logout</Login>\n          <div onClick={() => setOpen(true)} className=\"logged-in-btn\">\n            {user.displayName}\n          </div>\n        </>\n      ) : (\n        // <Login onClick={() => setOpen(true)}> Login</Login>\n        <Login onClick={handleLogin}>Login with FB</Login>\n      )}\n    </NavBar>\n  );\n};\n\nconst NavBar = styled.nav`\n  width: 100%;\n  height: 3rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  .logged-in-btn {\n    &:hover {\n      color: none;\n    }\n  }\n`;\n\nconst Login = styled.div`\n  text-transform: uppercase;\n  cursor: pointer;\n  &:hover {\n    color: red;\n  }\n`;\n\nexport default Nav;\n","/Users/vadykk/Desktop/edu/swapi/src/components/GlobalStyles.js",[],"/Users/vadykk/Desktop/edu/swapi/src/components/MyHeroes.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":11,"column":8,"nodeType":"62","messageId":"63","endLine":11,"endColumn":16},{"ruleId":"64","severity":1,"message":"65","line":27,"column":33,"nodeType":"66","messageId":"67","endLine":27,"endColumn":35},{"ruleId":"60","severity":1,"message":"61","line":12,"column":8,"nodeType":"62","messageId":"63","endLine":12,"endColumn":16},{"ruleId":"60","severity":1,"message":"68","line":3,"column":8,"nodeType":"62","messageId":"63","endLine":3,"endColumn":26},{"ruleId":"60","severity":1,"message":"69","line":7,"column":10,"nodeType":"62","messageId":"63","endLine":7,"endColumn":14},{"ruleId":"60","severity":1,"message":"70","line":9,"column":9,"nodeType":"62","messageId":"63","endLine":9,"endColumn":17},{"ruleId":"60","severity":1,"message":"71","line":28,"column":13,"nodeType":"62","messageId":"63","endLine":28,"endColumn":18},{"ruleId":"60","severity":1,"message":"72","line":30,"column":13,"nodeType":"62","messageId":"63","endLine":30,"endColumn":17},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'StyledFirebaseAuth' is defined but never used.","'open' is assigned a value but never used.","'uiConfig' is assigned a value but never used.","'token' is assigned a value but never used.","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]